<style lang="less">
  .swiper {
    width: 750rpx;
    height: 340rpx;
    &_img {
      width: 750rpx;
      height: 340rpx;
    }
  }
  .nav {
    display: flex;
    padding: 24rpx 0 30rpx;
    &_item {
      display: flex;
      flex: 1;
      justify-content: center;
      &_img {
        width: 128rpx;
        height: 140rpx;
      }
    }
  }
  .floor {
    margin-top: 30rpx;
    &_head {
      &_img {
        width: 750rpx;
        height: 59rpx;
      }
    }
    &_body {
      display: flex;
      background-color: #fff;
      padding: 20rpx 16rpx 10rpx 16rpx;
      &_left,
      &_left_img {
        width: 232rpx;
        height: 386rpx;
      }
      &_right {
        display: flex;
        flex-wrap: wrap;
        &_img {
          width: 233rpx;
          height: 188rpx;
          margin: 0 0 10rpx 10rpx;
        }
      }
    }
  }
</style>
<template>
<!-- 结构 -->
  <view class="container">
    <!-- 轮播图 -->
    <swiper class="swiper" indicator-dots indicator-color='rgba(255,255,255,0.5)' autoplay interval='1200' circular indicator-active-color='#ff2d4a'>
      <block wx:for='{{ swiperArr }}' wx:key='{{ Index }}'>
        <swiper-item>
          <navigator url="{{ item.navigator_url }}">
            <image src="{{ item.image_src }}" class="swiper_img"></image>
          </navigator>
        </swiper-item>
      </block>
    </swiper>
    <!-- 导航栏 -->
    <view class="nav">
      <block wx:for="{{ navArr }}" wx:key="{{ index }}">
        <navigator class="nav_item" hover-class="none" url="{{ item.navigator_url }}" open-type="{{ item.open_type }}">
          <image src="{{ item.image_src }}" class="nav_item_img"></image>
        </navigator>
      </block>
    </view>
    <!-- 楼层栏 -->
    <view class="floor">
      <view class="floor_head">
        <image src="/upload/pic_floor01_title@2x.png" class="floor_head_img"></image>
      </view>
      <view class="floor_body">
        <view class="floor_body_left">
          <navigator hover-class="none">
            <image class="floor_body_left_img" src="/upload/pic_floor01_1@2x.png"></image>
          </navigator>
        </view>
        <view class="floor_body_right">
          <navigator url="" hover-class="none">
            <image src="/upload/pic_floor01_2@2x.png" class="floor_body_right_img"></image>
          </navigator>
          <navigator url="" hover-class="none">
            <image src="/upload/pic_floor01_3@2x.png" class="floor_body_right_img"></image>
          </navigator>
          <navigator url="" hover-class="none">
            <image src="/upload/pic_floor01_4@2x.png" class="floor_body_right_img"></image>
          </navigator>
          <navigator url="" hover-class="none">
            <image src="/upload/pic_floor01_5@2x.png" class="floor_body_right_img"></image>
          </navigator>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  // JS
  import wepy from 'wepy'

  export default class Index extends wepy.page {
    // 配置
    config = {
      navigationBarTitleText: '优购'
    }
    data = {
      swiperArr: [],
      navArr: [],
      floorArr: []
    }
    onLoad() {
      console.log('onLoad')
      // 轮播图
      wepy.request({
        url: 'https://itjustfun.cn/api/public/v1/home/swiperdata', // 开发者服务器接口地址",
        data: '', // 请求的参数",
        method: 'GET',
        dataType: 'json', // 如果设为json，会尝试对返回的数据做一次 JSON.parse
        success: res => {
          // console.log(res)
          if (res.data.meta.status === 200) {
            this.swiperArr = res.data.data
            // 小程序默认是单向数据绑定, wepy框架在原有的小程序基础上封装成立双向数据绑定
            this.$apply() // 如果遇到异步函数, 需要用this.$apply()函数手动更新视图
            // console.log(this.swiperArr)
          } else {
            console.log(res.data.meta.msg)
          }
        }
      })
      // 导航栏
      wepy.request({
        url: 'https://itjustfun.cn/api/public/v1/home/catitems', // 开发者服务器接口地址",
        data: '', // 请求的参数",
        method: 'GET',
        dataType: 'json', // 如果设为json，会尝试对返回的数据做一次 JSON.parse
        success: res => {
          // console.log(res)
          if (res.data.meta.status === 200) {
            this.navArr = res.data.data
            this.$apply()
          } else {
            console.log(res.data.meta.msg)
          }
        }
      })
      // 楼层数据
      wepy.request({
        url: 'https://itjustfun.cn/api/public/v1/home/floordata', // 开发者服务器接口地址",
        data: '', // 请求的参数",
        method: 'GET',
        dataType: 'json', // 如果设为json，会尝试对返回的数据做一次 JSON.parse
        success: res => {
          console.log(res)
          if (res.data.meta.status === 200) {
            this.floorArr = res.data.data
            console.log(this.floorArr)
          }
        }
      })
    }
  }
</script>
